test_data <- Prud_dataset[47506:59381]
train_data<- Prud_dataset[1:47505,]
test_data <- Prud_dataset[47506:59382]
setwd("C://Users//kamal//Desktop//ADS//Final_Midterm_Prudential_Insurance")
#Verifying the directory path
getwd()
#Reading preprocessed data
Prud_dataset <- read.csv("train_Cleaned.csv")
Prud_dataset$X <- NULL
#Retrieving Coloumn details
str(Prud_dataset)
train_data<- Prud_dataset[1:47505,]
test_data <- Prud_dataset[47506:59382]
train_data <- Prud_dataset[1:47505,]
test_data <- Prud_dataset[47506:59381]
Prud_dataset <- read.csv("train_Cleaned.csv")
Prud_dataset$X <- NULL
#Retrieving Coloumn details
str(Prud_dataset)
train_data <- Prud_dataset[1:47505,]
test_data <- Prud_dataset[47506:59381]
train_data <- Prud_dataset[1:47505, ]
test_data <- Prud_dataset[47506:59381, ]
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
prediction <- predict(model_3, test_data)
summary(round(prediction))
pred_cm <- table(prediction,test_data$Response)
pred_cm
sum(diag(pred_cm))/sum(pred_cm) * 100
summary(round(prediction))
summary(test_data$Response)
cor(prediction,test_data$Response)
#Visualizing model_3
rpart.plot(model, digits=4, box.palette = "BuBn")
rpart.plot(model_3, digits=4, box.palette = "BuBn")
predictedData <- data.frame(test_data[-65],prediction)
predictedData <- data.frame(test_data,prediction)
View(predictedData)
View(predictedData)
predictedData <- data.frame(test_data[-65],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
prediction_df <- data.frame(test_data[-65],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
#measuring performance using mae (mean absolute error)
mae <- function(actual, prediction) {
mean(abs(actual - prediction))
}
mae(test_data$Response, round(prediction))
mean_response <- mean(train_data$Response)
mae(mean_response, test_data$Response)
#mean square error
mse <- mean((test_data$Response-prediction)^2)
mae <- function(actual, prediction) {
mean(abs(actual - prediction))
}
mae(test_data$Response, round(prediction))
mean_res <- mean(train_data$Response)
mae(mean_res, test_data$Response)
#measuring performance with mean absolute error
MAE <- function(actual, predicted) {
mean(abs(actual - predicted))
}
MAE(prud_test$Response, round(predicted))
mean_response <- mean(prud_train$Response)
MAE(mean_response, prud_test$Response)
MSE <- mean((prud_test$Response-predicted)^2)
setwd("C://Users//kamal//Desktop//ADS//Final_Midterm_Prudential_Insurance")
#prud <- read.csv("train_Cleaned.csv")
prud <- read.csv("train_Cleaned.csv")
prud$X <- NULL
str(prud)
#plot the target variable
hist(prud$Response)
summary(prud)
nrow(prud)
#split the dataset
prud_train <- prud[1:47505,]
prud_test <- prud[47506:59381,]
#measuring performance with mean absolute error
MAE <- function(actual, predicted) {
mean(abs(actual - predicted))
}
MAE(prud_test$Response, round(predicted))
mean_response <- mean(prud_train$Response)
MAE(mean_response, prud_test$Response)
MSE <- mean((prud_test$Response-predicted)^2)
predicted <- predict(model, prud_test)
summary(round(predicted))
summary(prud_test$Response)
cor(predicted, prud_test$Response)
model <- rpart(prud_train$Response~., data = prud_train, method = "anova",
control=rpart.control(minsplit=100, cp=0.01))
model
summary(model)
printcp(model)
plotcp(model)
library(rpart.plot)
rpart.plot(model, digits=4, box.palette = "BuBn")
#evaluating model performance
predicted <- predict(model, prud_test)
summary(round(predicted))
summary(prud_test$Response)
cor(predicted, prud_test$Response)
MAE <- function(actual, predicted) {
mean(abs(actual - predicted))
}
MAE(prud_test$Response, round(predicted))
mean_response <- mean(prud_train$Response)
MAE(mean_response, prud_test$Response)
MSE <- mean((prud_test$Response-predicted)^2)
model.m5 <- M5P(train_data$Response~., data = train_data)
model.m5
summary(model.m5)# if this values matchs with
predict.m5 <- predict(model.m5, test_data)
summary(predict.m5)
cor(predict.m5, test_data$Response)
mae(test_data$Response, round(predict.m5))
prediction_df <- data.frame(test_data, prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
prediction_df <- data.frame(test_data[-122],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
prediction_df <- data.frame(test_data[-122],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
nrow(prud)
model_m5 <- M5P(train_data$Response~., data = train_data)
model_m5
summary(model_m5)# if this values matchs with
predict_m5 <- predict(model.m5, test_data)
summary(predict_m5)
cor(predict_m5, test_data$Response)
# correlation changed to 0.60
mae(test_data$Response, round(predict_m5))
model <- M5P(train_data$Response~., data = train_data)
model
summary(model)
predict <- predict(model, test_data)
summary(predict)
summary(model_3)
library(rpart)
model <- rpart(prud_train$Response~., data = prud_train, method = "anova",
control=rpart.control(minsplit=100, cp=0.01))
model
summary(model)
printcp(model)
plotcp(model)
library(rpart.plot)
rpart.plot(model, digits=4, box.palette = "BuBn")
#evaluating model performance
predicted <- predict(model, prud_test)
summary(round(predicted))
summary(prud_test$Response)
cor(predicted, prud_test$Response)
MAE <- function(actual, predicted) {
mean(abs(actual - predicted))
}
MAE(prud_test$Response, round(predicted))
mean_response <- mean(prud_train$Response)
MAE(mean_response, prud_test$Response)
MSE <- mean((prud_test$Response-predicted)^2)
install.packages("RWeka")
#improving the model performance
library(RWeka)
model.m5 <- M5P(prud_train$Response~., data = prud_train)
model.m5
summary(model.m5)# if this values matchs with
predict.m5 <- predict(model.m5, prud_test)
summary(predict.m5)
cor(predict.m5, prud_test$Response)
MAE(prud_test$Response, round(predict.m5))
install.packages("RWeka")
hist(Prud_dataset$Response, col="red")
hist(x=Frequency, y=Prud_dataset$Response, col="red")
hist(x= "Frequency", y="Prud_dataset$Response", col="red")
hist(Prud_dataset$Response, col="red")
y <- Prud_dataset$Response
hist(y, col="red")
Response <- Prud_dataset$Response
hist(Response, col="red")
#Histogram plot to view response
Response <- Prud_dataset$Response
hist(Response, col="red", main "Histogram")
#Histogram plot to view response
Response <- Prud_dataset$Response
hist(Response, col="red", main="Histogram")
#Histogram plot to view response
Response <- Prud_dataset$Response
hist(Response, col="red", main="Histogram of Responses")
summary(Prud_dataset)
nrow(Prud_dataset)
ncol(Prud_dataset)
Prediction_hist <- train_datat$prediction
hist(Prediction_hist, col="blue", main="Histogram of Predictions")
Prediction_hist <- train_datat$prediction
Prediction_hist <- prediction_df$prediction
hist(Prediction_hist, col="blue", main="Histogram of Predictions")
#Predictions histogram
Prediction_hist <- prediction_df$prediction
hist(Prediction_hist, col="yellow", main="Histogram of Predictions")
#Predictions histogram
Prediction_hist <- prediction_df$prediction
hist(Prediction_hist, col="blue", main="Histogram of Predictions")
install.packages("forecast")
install.packages("ade4")
install.packages("forecastHybrid")
library(forecast)
library(ade4)
library(e1071)
library(ggplot2)
library("rpart")
library("rpart.plot")
getwd()
setwd("C:/Users/kamal/Desktop/ADS/Final_Midterm_Prudential_Insurance")
mydata <- read.csv(file="train.csv", header=TRUE, sep=",")
options(max.print=1000000)
mydata$Family_Hist_3 <- NULL
mydata$Family_Hist_5 <- NULL
mydata$Medical_History_10 <- NULL
mydata$Medical_History_15 <- NULL
mydata$Medical_History_24 <- NULL
mydata$Medical_History_32 <- NULL
mydata$Id <- NULL
mylist <- c(unlist(lapply(mydata, function(x) any(is.na(x)))))
View(mylist)
mydata$Employment_Info_1[is.na(mydata$Employment_Info_1)] <- mean(mydata$Employment_Info_1, na.rm = T)
mydata$Employment_Info_4[is.na(mydata$Employment_Info_4)] <- mean(mydata$Employment_Info_4, na.rm = T)
mydata$Employment_Info_6[is.na(mydata$Employment_Info_6)] <- mean(mydata$Employment_Info_6, na.rm = T)
mydata$Insurance_History_5[is.na(mydata$Insurance_History_5)] <- mean(mydata$Insurance_History_5, na.rm = T)
mydata$Family_Hist_2[is.na(mydata$Family_Hist_2)] <- mean(mydata$Family_Hist_2, na.rm = T)
mydata$Family_Hist_4[is.na(mydata$Family_Hist_4)] <- mean(mydata$Family_Hist_4, na.rm = T)
mydata$Medical_History_1[is.na(mydata$Medical_History_1)] <- mean(mydata$Medical_History_1, na.rm = T)
data_ctgr <- mydata[c("Medical_History_1","Product_Info_1", "Product_Info_2", "Product_Info_3", "Product_Info_5", "Product_Info_6", "Product_Info_7", "Employment_Info_2", "Employment_Info_3", "Employment_Info_5", "InsuredInfo_1", "InsuredInfo_2", "InsuredInfo_3", "InsuredInfo_4", "InsuredInfo_5", "InsuredInfo_6", "InsuredInfo_7", "Insurance_History_1", "Insurance_History_2", "Insurance_History_3", "Insurance_History_4", "Insurance_History_7", "Insurance_History_8", "Insurance_History_9", "Family_Hist_1", "Medical_History_2", "Medical_History_3", "Medical_History_4", "Medical_History_5", "Medical_History_6", "Medical_History_7", "Medical_History_8", "Medical_History_9", "Medical_History_11", "Medical_History_12", "Medical_History_13", "Medical_History_14", "Medical_History_16", "Medical_History_17", "Medical_History_18", "Medical_History_19", "Medical_History_20", "Medical_History_21", "Medical_History_22", "Medical_History_23", "Medical_History_25", "Medical_History_26", "Medical_History_27", "Medical_History_28", "Medical_History_29", "Medical_History_30", "Medical_History_31", "Medical_History_33", "Medical_History_34", "Medical_History_35", "Medical_History_36", "Medical_History_37", "Medical_History_38", "Medical_History_39", "Medical_History_40", "Medical_History_41")]
OneToCconv <- acm.disjonctif(data_ctgr)
data_ctgr <- mydata[c("Medical_History_1","Product_Info_1", "Product_Info_2", "Product_Info_3", "Product_Info_5", "Product_Info_6", "Product_Info_7", "Employment_Info_2", "Employment_Info_3", "Employment_Info_5", "InsuredInfo_1", "InsuredInfo_2", "InsuredInfo_3", "InsuredInfo_4", "InsuredInfo_5", "InsuredInfo_6", "InsuredInfo_7", "Insurance_History_1", "Insurance_History_2", "Insurance_History_3", "Insurance_History_4", "Insurance_History_7", "Insurance_History_8", "Insurance_History_9", "Family_Hist_1", "Medical_History_2", "Medical_History_3", "Medical_History_4", "Medical_History_5", "Medical_History_6", "Medical_History_7", "Medical_History_8", "Medical_History_9", "Medical_History_11", "Medical_History_12", "Medical_History_13", "Medical_History_14", "Medical_History_16", "Medical_History_17", "Medical_History_18", "Medical_History_19", "Medical_History_20", "Medical_History_21", "Medical_History_22", "Medical_History_23", "Medical_History_25", "Medical_History_26", "Medical_History_27", "Medical_History_28", "Medical_History_29", "Medical_History_30", "Medical_History_31", "Medical_History_33", "Medical_History_34", "Medical_History_35", "Medical_History_36", "Medical_History_37", "Medical_History_38", "Medical_History_39", "Medical_History_40", "Medical_History_41")]
OneToCconv <- acm.disjonctif(data_ctgr)
data_cntg <- mydata[c("Product_Info_4", "Ins_Age", "Ht", "Wt", "BMI", "Employment_Info_1", "Employment_Info_4", "Employment_Info_6", "Insurance_History_5", "Family_Hist_2", "Family_Hist_4")]
data_cntg <- mydata[c("Product_Info_4", "Ins_Age", "Ht", "Wt", "BMI", "Employment_Info_1", "Employment_Info_4", "Employment_Info_6", "Insurance_History_5", "Family_Hist_2", "Family_Hist_4")]
data_dummy<-mydata[c("Medical_Keyword_1","Medical_Keyword_2","Medical_Keyword_3","Medical_Keyword_4","Medical_Keyword_5","Medical_Keyword_6","Medical_Keyword_7","Medical_Keyword_8","Medical_Keyword_9","Medical_Keyword_10","Medical_Keyword_11","Medical_Keyword_12","Medical_Keyword_13","Medical_Keyword_14","Medical_Keyword_15","Medical_Keyword_16","Medical_Keyword_17","Medical_Keyword_18","Medical_Keyword_19", "Medical_Keyword_20", "Medical_Keyword_21", "Medical_Keyword_22", "Medical_Keyword_23","Medical_Keyword_24", "Medical_Keyword_25", "Medical_Keyword_26", "Medical_Keyword_27", "Medical_Keyword_28", "Medical_Keyword_29","Medical_Keyword_30", "Medical_Keyword_31", "Medical_Keyword_32", "Medical_Keyword_33","Medical_Keyword_34", "Medical_Keyword_35","Medical_Keyword_36", "Medical_Keyword_37", "Medical_Keyword_38", "Medical_Keyword_39", "Medical_Keyword_40", "Medical_Keyword_41", "Medical_Keyword_42", "Medical_Keyword_43", "Medical_Keyword_44", "Medical_Keyword_45","Medical_Keyword_46", "Medical_Keyword_47","Medical_Keyword_48")]
final_data <- data.frame(c(OneToCconv, data_cntg,data_dummy))
final_pca_data <- prcomp(final_data)
summary(final_pca_data)
final_pca_data <- prcomp(final_data)
final_pca_data_trimmed <- data.frame(final_pca_data$x[,1:116])
pcaYVar <- data.frame(c(final_pca_data_trimmed, original_data[c("Response")]))
pcaYVar$Response<-as.numeric(pcaYVar$Response)
train <-pcaYVar[1:49382,]
test <- pcaYVar[49383:59382,]
lm_model <-lm(Response ~., data =train)
summary(lm_model)
pred <- predict(lm_model, test)
accuracy(pred,test$Response)
qplot(Response, data=test, geom="density", alpha=I(.5), fill="density",
main="Distribution of Response on test data", xlab="Response",
ylab="Density")
qplot(Response, data=train, geom="density", alpha=I(.5),
main="Distribution of Response on train data", xlab="Response",
ylab="Density")
pcaYVar <- data.frame(c(final_pca_data_trimmed, original_data[c("Response")]))
pcaYVar$Response<-as.numeric(pcaYVar$Response)
setwd("C:/Users/kamal/Desktop/ADS/Final_Midterm_Prudential_Insurance")
getwd()
mydata <- read.csv(file="train.csv", header=TRUE, sep=",")
options(max.print=1000000)
mydata$Family_Hist_3 <- NULL
mydata$Family_Hist_5 <- NULL
mydata$Medical_History_10 <- NULL
mydata$Medical_History_15 <- NULL
mydata$Medical_History_24 <- NULL
mydata$Medical_History_32 <- NULL
mydata$Id <- NULL
mylist <- c(unlist(lapply(mydata, function(x) any(is.na(x)))))
View(mylist)
mydata$Employment_Info_1[is.na(mydata$Employment_Info_1)] <- mean(mydata$Employment_Info_1, na.rm = T)
mydata$Employment_Info_4[is.na(mydata$Employment_Info_4)] <- mean(mydata$Employment_Info_4, na.rm = T)
mydata$Employment_Info_6[is.na(mydata$Employment_Info_6)] <- mean(mydata$Employment_Info_6, na.rm = T)
mydata$Insurance_History_5[is.na(mydata$Insurance_History_5)] <- mean(mydata$Insurance_History_5, na.rm = T)
mydata$Family_Hist_2[is.na(mydata$Family_Hist_2)] <- mean(mydata$Family_Hist_2, na.rm = T)
mydata$Family_Hist_4[is.na(mydata$Family_Hist_4)] <- mean(mydata$Family_Hist_4, na.rm = T)
mydata$Medical_History_1[is.na(mydata$Medical_History_1)] <- mean(mydata$Medical_History_1, na.rm = T)
data_ctgr <- mydata[c("Medical_History_1","Product_Info_1", "Product_Info_2", "Product_Info_3", "Product_Info_5", "Product_Info_6", "Product_Info_7", "Employment_Info_2", "Employment_Info_3", "Employment_Info_5", "InsuredInfo_1", "InsuredInfo_2", "InsuredInfo_3", "InsuredInfo_4", "InsuredInfo_5", "InsuredInfo_6", "InsuredInfo_7", "Insurance_History_1", "Insurance_History_2", "Insurance_History_3", "Insurance_History_4", "Insurance_History_7", "Insurance_History_8", "Insurance_History_9", "Family_Hist_1", "Medical_History_2", "Medical_History_3", "Medical_History_4", "Medical_History_5", "Medical_History_6", "Medical_History_7", "Medical_History_8", "Medical_History_9", "Medical_History_11", "Medical_History_12", "Medical_History_13", "Medical_History_14", "Medical_History_16", "Medical_History_17", "Medical_History_18", "Medical_History_19", "Medical_History_20", "Medical_History_21", "Medical_History_22", "Medical_History_23", "Medical_History_25", "Medical_History_26", "Medical_History_27", "Medical_History_28", "Medical_History_29", "Medical_History_30", "Medical_History_31", "Medical_History_33", "Medical_History_34", "Medical_History_35", "Medical_History_36", "Medical_History_37", "Medical_History_38", "Medical_History_39", "Medical_History_40", "Medical_History_41")]
OneToCconv <- acm.disjonctif(data_ctgr)
data_cntg <- mydata[c("Product_Info_4", "Ins_Age", "Ht", "Wt", "BMI", "Employment_Info_1", "Employment_Info_4", "Employment_Info_6", "Insurance_History_5", "Family_Hist_2", "Family_Hist_4")]
data_dummy<-mydata[c("Medical_Keyword_1","Medical_Keyword_2","Medical_Keyword_3","Medical_Keyword_4","Medical_Keyword_5","Medical_Keyword_6","Medical_Keyword_7","Medical_Keyword_8","Medical_Keyword_9","Medical_Keyword_10","Medical_Keyword_11","Medical_Keyword_12","Medical_Keyword_13","Medical_Keyword_14","Medical_Keyword_15","Medical_Keyword_16","Medical_Keyword_17","Medical_Keyword_18","Medical_Keyword_19", "Medical_Keyword_20", "Medical_Keyword_21", "Medical_Keyword_22", "Medical_Keyword_23","Medical_Keyword_24", "Medical_Keyword_25", "Medical_Keyword_26", "Medical_Keyword_27", "Medical_Keyword_28", "Medical_Keyword_29","Medical_Keyword_30", "Medical_Keyword_31", "Medical_Keyword_32", "Medical_Keyword_33","Medical_Keyword_34", "Medical_Keyword_35","Medical_Keyword_36", "Medical_Keyword_37", "Medical_Keyword_38", "Medical_Keyword_39", "Medical_Keyword_40", "Medical_Keyword_41", "Medical_Keyword_42", "Medical_Keyword_43", "Medical_Keyword_44", "Medical_Keyword_45","Medical_Keyword_46", "Medical_Keyword_47","Medical_Keyword_48")]
final_data <- data.frame(c(OneToCconv, data_cntg,data_dummy))
final_pca_data <- prcomp(final_data)
summary(final_pca_data)
final_pca_data_trimmed <- data.frame(final_pca_data$x[,1:116])
pcaYVar <- data.frame(c(final_pca_data_trimmed, original_data[c("Response")]))
pie(Response)
library(rpart)
library(rpart.plot)
library(RWeka)
setwd("C://Users//kamal//Desktop//ADS//Final_Midterm_Prudential_Insurance")
getwd()
Prud_dataset <- read.csv("train_Cleaned.csv")
Prud_dataset$X <- NULL
str(Prud_dataset)
summary(Prud_dataset)
nrow(Prud_dataset)
ncol(Prud_dataset)
Response <- Prud_dataset$Response
hist(Response, col="red", main="Histogram of Responses")
pie(Response)
pie(Response)
pie(table((Response))
?piechart
?piechart
help(piechart)
pie(Response, labels = names(Response), edges = 200, radius = 0.8,
main = "Piechart of responses")
Response <- Prud_dataset$Response
hist(Response, col="red", main="Histogram of Responses")
hist(Response, col="red", main="Histogram of Responses")
pie(Response, labels = names(Response), edges = 200, radius = 0.8,
main = "Piechart of responses")
pie(Response, labels = names(Response), edges = 200, radius = 0.8,
main = "Piechart of responses")
library(ggplot2)
pie(Response, labels = names(Response), edges = 200, radius = 0.8,
main = "Piechart of responses")
Response <- table(Prud_dataset$Response)
lbls <- paste(names(Response), "\n", Response, sep="")
pie(Response, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
Response <- table(Prud_dataset$Response)
lbls <- paste(names(Response), "\n", Response, sep="",edges = 200)
pie(Response, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
Response <- table(Prud_dataset$Response)
lbls <- paste(names(Response), "\n", Response, sep="")
pie(Response, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
pie(Response, labels = lbls,  col=rainbow(length(lbls))
main="Pie Chart of Species\n (with sample sizes)")
pie(Response, labels = lbls,  col=rainbow(length(lbls)),
main="Pie Chart of Species\n (with sample sizes)")
pie(Response, labels = lbls,  col=rainbow(length(lbls)),
main="Piechart of responses")
train_data <- Prud_dataset[1:47505, ]
test_data <- Prud_dataset[47506:59381, ]
model_1 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=35, cp=0.01))
summary(model_1)
model_2 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=65, cp=0.01))
summary(model_2)
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
prediction <- predict(model_3, test_data)
pred_cm <- table(prediction,test_data$Response)
pred_cm
sum(diag(pred_cm))/sum(pred_cm) * 100
summary(round(prediction))
summary(round(prediction))
summary(test_data$Response)
cor(prediction,test_data$Response)
rpart.plot(model_3, digits=4, box.palette = "BuBn")
prediction_df <- data.frame(test_data[-122],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
mae <- function(actual, prediction) {
mean(abs(actual - prediction))
}
mae(test_data$Response, round(prediction))
mean_res <- mean(train_data$Response)
mae(mean_res, test_data$Response)
mse <- mean((test_data$Response-prediction)^2)
model <- M5P(train_data$Response~., data = train_data)
model
summary(model)
predict <- predict(model, test_data)
summary(predict)
cor(predict, test_data$Response)
mae(test_data$Response, round(predict))
Prediction_pie <- table(prediction_df$prediction)
lbls <- paste(names(Prediction_pie), "\n", Prediction_pie, sep="")
pie(Prediction_pie, labels = lbls,  col=rainbow(length(lbls)),
main="Piechart of responses")
rpart.plot(model_3, digits=4, box.palette = "BuBn")
prediction_df <- data.frame(test_data[-122],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
mae <- function(actual, prediction) {
mean(abs(actual - prediction))
}
mae(test_data$Response, round(prediction))
mean_res <- mean(train_data$Response)
mae(mean_res, test_data$Response)
mse <- mean((test_data$Response-prediction)^2)
Prediction_pie <- table(prediction_df$prediction)
lbls <- paste(names(Prediction_pie), "\n", Prediction_pie, sep="")
pie(Prediction_pie, labels = lbls,  col=rainbow(length(lbls)),
main="Piechart of responses")
Prediction_hist <- prediction_df$prediction
hist(Prediction_hist, col="blue", main="Histogram of Predictions")
pred_cm <- table(prediction,test_data$Response)
pred_cm
sum(diag(pred_cm))/sum(pred_cm) * 100
prediction <- predict(model_1, test_data)
pred_cm <- table(prediction,test_data$Response)
pred_cm
sum(diag(pred_cm))/sum(pred_cm) * 100
model_1 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=35, cp=0.01))
summary(model_1)
prediction <- predict(model_1, test_data)
pred_cm <- table(prediction,test_data$Response)
pred_cm
sum(diag(pred_cm))/sum(pred_cm) * 100
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
prediction <- predict(model_1, test_data)
sum(diag(pred_cm))/sum(pred_cm) * 100
prediction <- predict(model_3, test_data)
pred_cm <- table(prediction,test_data$Response)
pred_cm
acc <- sum(diag(pred_cm))/sum(pred_cm)
accuracy <- acc * 100
summary(round(prediction))
accuracy
pie(Prediction_pie, labels = lbls,  col=rainbow(length(lbls)),
main="Piechart of predictions")
Response <- table(Prud_dataset$Response)
lbls <- paste(names(Response), "\n", Response, sep="")
pie(Response, labels = lbls,  col=rainbow(length(lbls)),
main="Piechart of responses")
summary(model)
Response <- Prud_dataset$Response
hist(Response, col="red", main="Histogram of Responses")
model_1 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=35, cp=0.001))
rpart.plot(model_1, digits=4, box.palette = "BuBn")
prediction <- predict(model_3, test_data)
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
prediction <- predict(model_3, test_data)
prediction
pred_cm <- table(prediction,test_data$Response)
lbls <- paste(names(Response), "\n", Response, sep="")
pred_cm
mae <- function(actual, prediction) {
mean(abs(actual - prediction))
}
mae(test_data$Response, round(prediction))
summary(model)
Prud_dataset <- read.csv("train_Cleaned.csv")
Prud_dataset$Product_Info_2 <- NULL
Prud_dataset$X <- NULL
str(Prud_dataset)
summary(Prud_dataset)
nrow(Prud_dataset)
ncol(Prud_dataset)
Response <- Prud_dataset$Response
hist(Response, col="red", main="Histogram of Responses")
Response <- table(Prud_dataset$Response)
lbls <- paste(names(Response), "\n", Response, sep="")
pie(Response, labels = lbls,  col=rainbow(length(lbls)),
main="Piechart of responses")
train_data <- Prud_dataset[1:47505, ]
test_data <- Prud_dataset[47506:59381, ]
model_1 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=35, cp=0.001))
summary(model_1)
model_2 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=65, cp=0.01))
summary(model_2)
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
prediction <- predict(model_3, test_data)
pred_cm <- table(prediction,test_data$Response)
pred_cm
acc <- sum(diag(pred_cm))/sum(pred_cm)
accuracy <- acc * 100
accuracy
summary(round(prediction))
summary(test_data$Response)
cor(prediction,test_data$Response)
rpart.plot(model_3, digits=4, box.palette = "BuBn")
prediction_df <- data.frame(test_data[-122],prediction)
write.csv(prediction_df, file = "decision_tree_prediction.csv", row.names = FALSE)
mae <- function(actual, prediction) {
mean(abs(actual - prediction))
}
mae(test_data$Response, round(prediction))
mean_res <- mean(train_data$Response)
mae(mean_res, test_data$Response)
mse <- mean((test_data$Response-prediction)^2)
model <- M5P(train_data$Response~., data = train_data)
model
summary(model)
predict <- predict(model, test_data)
summary(predict)
cor(predict, test_data$Response)
mae(test_data$Response, round(predict))
Prediction_hist <- prediction_df$prediction
hist(Prediction_hist, col="blue", main="Histogram of Predictions")
rpart.plot(model_3, digits=4, box.palette = "BuBn")
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
prediction <- predict(model_3, test_data)
pred_cm <- table(prediction,test_data$Response)
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
summary(model_3)
rpart.plot(model_3, digits=4, box.palette = "BuBn")
model_3 <- rpart(train_data$Response~., data = train_data,
method = "anova", control=rpart.control(minsplit=100, cp=0.01))
rpart.plot(model_3, digits=4, box.palette = "BuBn")
